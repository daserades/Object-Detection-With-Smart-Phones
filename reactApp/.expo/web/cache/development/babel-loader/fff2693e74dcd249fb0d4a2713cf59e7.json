{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\engin\\\\Desktop\\\\Dev\\\\ObjectDetection\\\\reactApp\\\\demo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar _require = require('google-auth-library'),\n    JWT = _require.JWT;\n\nvar keys = require(\"./key.json\");\n\nvar vision = require('@google-cloud/vision');\n\nvar request = require('request');\n\nfunction main() {\n  var vision, client, _await$client$labelDe, _await$client$labelDe2, result, labels;\n\n  return _regeneratorRuntime.async(function main$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          vision = require('@google-cloud/vision');\n          client = new vision.ImageAnnotatorClient();\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(client.labelDetection('./resources/wakeupcat.jpg'));\n\n        case 4:\n          _await$client$labelDe = _context.sent;\n          _await$client$labelDe2 = _slicedToArray(_await$client$labelDe, 1);\n          result = _await$client$labelDe2[0];\n          labels = result.labelAnnotations;\n          console.log('Labels:');\n          labels.forEach(function (label) {\n            return console.log(label.description);\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nmain();\n\nvar demo = function (_Component) {\n  _inherits(demo, _Component);\n\n  var _super = _createSuper(demo);\n\n  function demo() {\n    _classCallCheck(this, demo);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(demo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, \" textInComponent \"));\n    }\n  }]);\n\n  return demo;\n}(Component);\n\nexport { demo as default };","map":{"version":3,"sources":["C:/Users/engin/Desktop/Dev/ObjectDetection/reactApp/demo.js"],"names":["React","Component","require","JWT","keys","vision","request","main","client","ImageAnnotatorClient","labelDetection","result","labels","labelAnnotations","console","log","forEach","label","description","demo"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;eAEcC,OAAO,CAAC,qBAAD,C;IAAdC,G,YAAAA,G;;AACP,IAAMC,IAAI,GAAGF,OAAO,cAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,sBAAD,CAAtB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAAvB;;AAEA,SAAeK,IAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACUF,UAAAA,MADV,GACmBH,OAAO,CAAC,sBAAD,CAD1B;AAIUM,UAAAA,MAJV,GAImB,IAAIH,MAAM,CAACI,oBAAX,EAJnB;AAAA;AAAA,2CAO2BD,MAAM,CAACE,cAAP,CAAsB,2BAAtB,CAP3B;;AAAA;AAAA;AAAA;AAOWC,UAAAA,MAPX;AAQUC,UAAAA,MARV,GAQmBD,MAAM,CAACE,gBAR1B;AASIC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAH,UAAAA,MAAM,CAACI,OAAP,CAAe,UAAAC,KAAK;AAAA,mBAAIH,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,WAAlB,CAAJ;AAAA,WAApB;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYAX,IAAI;;IAEiBY,I;;;;;;;;;;;;;6BAER;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ;AAKH;;;;EAR6BlB,S;;SAAbkB,I","sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, View } from 'react-native'\r\nconst {JWT} = require('google-auth-library');\r\nconst keys = require('./key.json');\r\nconst vision = require('@google-cloud/vision');\r\nconst request = require('request');\r\n\r\nasync function main() {\r\n    const vision = require('@google-cloud/vision');\r\n \r\n    // Creates a client\r\n    const client = new vision.ImageAnnotatorClient();\r\n   \r\n    // Performs label detection on the image file\r\n    const [result] = await client.labelDetection('./resources/wakeupcat.jpg');\r\n    const labels = result.labelAnnotations;\r\n    console.log('Labels:');\r\n    labels.forEach(label => console.log(label.description));\r\n  }\r\nmain();\r\n\r\nexport default class demo extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <View>\r\n                <Text> textInComponent </Text>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}