{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ObjectDetection\\\\reactApp\\\\demo.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Button } from \"./Button\";\nimport * as ImagePicker from \"../../src\";\nexport default function App() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      response = _React$useState2[0],\n      setResponse = _React$useState2[1];\n\n  return React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Take image\",\n    onPress: function onPress() {\n      return ImagePicker.launchCamera({\n        mediaType: 'photo',\n        includeBase64: false,\n        maxHeight: 200,\n        maxWidth: 200\n      }, function (response) {\n        setResponse(response);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Select image\",\n    onPress: function onPress() {\n      return ImagePicker.launchImageLibrary({\n        mediaType: 'photo',\n        includeBase64: false,\n        maxHeight: 200,\n        maxWidth: 200\n      }, function (response) {\n        setResponse(response);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Take video\",\n    onPress: function onPress() {\n      return ImagePicker.launchCamera({\n        mediaType: 'video'\n      }, function (response) {\n        setResponse(response);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Select video\",\n    onPress: function onPress() {\n      return ImagePicker.launchImageLibrary({\n        mediaType: 'video'\n      }, function (response) {\n        setResponse(response);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.response,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Res: \", JSON.stringify(response))), response && React.createElement(View, {\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 200,\n      height: 200\n    },\n    source: {\n      uri: response.uri\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  button: {\n    marginVertical: 24,\n    marginHorizontal: 24\n  },\n  image: {\n    marginVertical: 24,\n    alignItems: 'center'\n  },\n  response: {\n    marginVertical: 16,\n    marginHorizontal: 8\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/ObjectDetection/reactApp/demo.js"],"names":["React","Button","ImagePicker","App","useState","response","setResponse","launchCamera","mediaType","includeBase64","maxHeight","maxWidth","launchImageLibrary","styles","JSON","stringify","image","width","height","uri","StyleSheet","create","container","flex","alignItems","backgroundColor","button","marginVertical","marginHorizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  Platform,\r\n  SafeAreaView,\r\n} from 'react-native';\r\nimport {Button} from './Button';\r\n\r\nimport * as ImagePicker from '../../src';\r\n\r\nexport default function App() {\r\n  const [response, setResponse] = React.useState(null);\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView>\r\n        <Button\r\n          title=\"Take image\"\r\n          onPress={() =>\r\n            ImagePicker.launchCamera(\r\n              {\r\n                mediaType: 'photo',\r\n                includeBase64: false,\r\n                maxHeight: 200,\r\n                maxWidth: 200,\r\n              },\r\n              (response) => {\r\n                setResponse(response);\r\n              },\r\n            )\r\n          }\r\n        />\r\n\r\n        <Button\r\n          title=\"Select image\"\r\n          onPress={() =>\r\n            ImagePicker.launchImageLibrary(\r\n              {\r\n                mediaType: 'photo',\r\n                includeBase64: false,\r\n                maxHeight: 200,\r\n                maxWidth: 200,\r\n              },\r\n              (response) => {\r\n                setResponse(response);\r\n              },\r\n            )\r\n          }\r\n        />\r\n\r\n        <Button\r\n          title=\"Take video\"\r\n          onPress={() =>\r\n            ImagePicker.launchCamera({mediaType: 'video'}, (response) => {\r\n              setResponse(response);\r\n            })\r\n          }\r\n        />\r\n\r\n        <Button\r\n          title=\"Select video\"\r\n          onPress={() =>\r\n            ImagePicker.launchImageLibrary({mediaType: 'video'}, (response) => {\r\n              setResponse(response);\r\n            })\r\n          }\r\n        />\r\n\r\n        <View style={styles.response}>\r\n          <Text>Res: {JSON.stringify(response)}</Text>\r\n        </View>\r\n\r\n        {response && (\r\n          <View style={styles.image}>\r\n            <Image\r\n              style={{width: 200, height: 200}}\r\n              source={{uri: response.uri}}\r\n            />\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    backgroundColor: '#F5FCFF',\r\n  },\r\n  button: {\r\n    marginVertical: 24,\r\n    marginHorizontal: 24,\r\n  },\r\n  image: {\r\n    marginVertical: 24,\r\n    alignItems: 'center',\r\n  },\r\n  response: {\r\n    marginVertical: 16,\r\n    marginHorizontal: 8,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}